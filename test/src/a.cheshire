export fn gc().

object Foo {
    i: Int.
    b: Foo.
}

fn new_foo() -> Foo {
    let x = allocate Foo.
    gc().
    x:i = 1.
    x:b = null.
    x
}

fn bar(i: Int) {
    if i < 5 {
        bar(i + 1).
        gc().
    }
}

fn main() -> Int {
    let y = new_foo().
    gc().
    print(y:i:into()).
    bar(0).
    gc().
    y = null.
    gc().
    0
}