trait Add<_T> {
    type AddResult.
    fn add(self, other: _T) -> Self::AddResult.
}

trait Subtract<_T> {
    type SubtractResult.
    fn sub(self, other: _T) -> Self::SubtractResult.
}

trait Multiply<_T> {
    type MultiplyResult.
    fn mul(self, other: _T) -> Self::MultiplyResult.
}

trait Divide<_T> {
    type DivideResult.
    fn div(self, other: _T) -> Self::DivideResult.
}

impl Add for Int {
    type AddResult = Int.

    fn add(self, other: Int) -> Int {
    }
}
